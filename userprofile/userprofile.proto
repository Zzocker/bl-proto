syntax="proto3";

package userprofile;
import "common/common.proto";
option go_package="github.com/Zzocker/bl-proto-go/userprofile";

service UserProfile{
    // Register : will register user to the system
    // input : RegisterRequest object and password in metadata with key "SECRET"
    // output : RegisterResponse
    rpc Register(RegisterRequest)returns(RegisterResponse);

    // CheckCred : will check cred of a user
    // input : CheckCredRequest and password in metadata with key "SECRET"
    // output CheckCredResponse
    rpc CheckCred(CheckCredRequest)returns(CheckCredResponse);

    // GetUser : return user with given Username
    // input : GetUserRequest and JWT in metadata with key "JWT" {TODO: will be done after oauth service}
    // output : GetUserResponse
    rpc GetUser(GetUserRequest)returns(GetUserResponse);
}

message RegisterRequest{
    string Username=1;
    string Email=2;
    string Phone=3;
    GenderType Gender=4;
    string Name=5;
}
message RegisterResponse{
    common.Header Header=1;
}
message CheckCredRequest{
    string Username=1;
}
message CheckCredResponse{
    common.Header Header=1;
    bool Ok=2;// False = wrong and True correct cred
}

message GetUserRequest{
    string Username=1;
}

message GetUserResponse{
    common.Header Header=1;
    User User=2;
}


message User{
    string Username=1;
    string Email=2;
    string Name=3;
    GenderType Gender =4;
    DateType DOB=5;
    string Phone=6;
    Contact Contact=7;
    Addresses Addresses=8;
    Photos Photos=9;
    StatusType Status=10;
}

enum GenderType{
    UNKNOWN=0;
    FEMALE=1;
    MALE=2;
}

message DateType{
    int32 Date=1;
    int32 Month=2;
    int32 Year=3;
}

message Contact{
    string Linkedin=1;
    string Twitter=2;
    string Instagram=3;
    string Facebook=4;
}

message Addresses {
    Address Current = 1;
    Address Permanent = 2;
}

message Address {
    string Line=2;
    string City=3;
    string District=4;
    string State=5;
    int32 PostalCode=6;
}


message Photos {
    Attachment Profile = 1;
    Attachment Cover = 2;
}
message Attachment {
    bytes Data =1;
    string URL = 2;
    string Title =3;
}

enum StatusType{
    NOT_VERIFIED=0;
    VERIFIED=1;
}